{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($siteUrl: String) {\\n  sites(where: {name: {equals: $siteUrl}}){\\n    id\\n    language\\n    languageLabel\\n    name\\n    niche\\n    logotype {\\n      url\\n    },\\n    providers(first: 10) {\\n      name\\n      rating\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../modules/apolloClient\";\nvar siteQuery = gql(_templateObject());\n\nvar IndexPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexPage, _Component);\n\n  function IndexPage() {\n    _classCallCheck(this, IndexPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IndexPage).apply(this, arguments));\n  }\n\n  _createClass(IndexPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, _JSON$stringify(this.props.site, null, 2)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        var _ref, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return client.query({\n                  query: siteQuery\n                });\n\n              case 2:\n                _ref = _context.sent;\n                data = _ref.data;\n                return _context.abrupt(\"return\", {\n                  site: data.sites[0]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IndexPage;\n}(Component);\n\nexport { IndexPage as default };","map":{"version":3,"sources":["/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/index.js"],"names":["React","Component","Query","gql","client","siteQuery","IndexPage","props","site","ctx","query","data","sites"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,IAAMC,SAAS,GAAGF,GAAH,mBAAf;;IAmBqBG,S;;;;;;;;;;;;;6BAWV;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,gBAAe,KAAKC,KAAL,CAAWC,IAA1B,EAAgC,IAAhC,EAAsC,CAAtC,CAAN,CADF,CADF;AAKD;;;;;;gDAf4BC,G;;;;;;;;uBACRL,MAAM,CAACM,KAAP,CAAa;AAC9BA,kBAAAA,KAAK,EAAEL;AADuB,iBAAb,C;;;;AAAdM,gBAAAA,I,QAAAA,I;iDAIE;AAACH,kBAAAA,IAAI,EAAEG,IAAI,CAACC,KAAL,CAAW,CAAX;AAAP,iB;;;;;;;;;;;;;;;;;;;EAP4BX,S;;SAAlBK,S","sourcesContent":["import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\"\nimport { client } from \"../modules/apolloClient\";\n\nconst siteQuery = gql`\n  query($siteUrl: String) {\n  sites(where: {name: {equals: $siteUrl}}){\n    id\n    language\n    languageLabel\n    name\n    niche\n    logotype {\n      url\n    },\n    providers(first: 10) {\n      name\n      rating\n    }\n  }\n}\n`\n\nexport default class IndexPage extends Component {\n\n  static async getInitialProps(ctx){\n    let {data} = await client.query({\n      query: siteQuery\n    })\n\n    return {site: data.sites[0]}\n  }\n\n\n  render() {\n    return (\n      <div>\n        <pre>{JSON.stringify(this.props.site, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}