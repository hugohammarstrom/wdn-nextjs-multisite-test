{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/providers/[slug].js\";\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../../modules/apolloClient\";\nconst providerQuery = gql`\n  query($slug: String) {\n    providers(where: {slug: {contains: $slug}}){\n      id\n      createdAt\n      name\n      website\n      logotype {\n        url\n      }\n      affiliateLink\n      screenshots\n      termsUrl\n      founded\n      rating\n      weight\n      slug\n      numberOfTags\n    }\n  }\n`;\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let {\n      slug\n    } = ctx.query;\n    let {\n      data: {\n        providers\n      }\n    } = await client.query({\n      query: providerQuery,\n      variables: {\n        slug: slug\n      }\n    });\n    return {\n      provider: providers[0]\n    };\n  }\n\n  render() {\n    let {\n      provider\n    } = this.props;\n    let {\n      logotype = {}\n    } = provider;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: provider.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, provider.name)), logotype ? React.createElement(\"img\", {\n      src: logotype.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }) : null), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, _JSON$stringify(provider, null, 2)));\n  }\n\n}","map":{"version":3,"sources":["/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/providers/[slug].js"],"names":["React","Component","gql","client","providerQuery","IndexPage","getInitialProps","ctx","slug","query","data","providers","variables","provider","render","props","logotype","url","name"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,MAAMC,aAAa,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;CAA1B;AAsBA,eAAe,MAAMG,SAAN,SAAwBJ,SAAxB,CAAkC;AAC/C,eAAaK,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,QAAI;AAAEC,MAAAA;AAAF,QAAWD,GAAG,CAACE,KAAnB;AAEA,QAAI;AAAEC,MAAAA,IAAI,EAAE;AAACC,QAAAA;AAAD;AAAR,QAAuB,MAAMR,MAAM,CAACM,KAAP,CAAa;AAC5CA,MAAAA,KAAK,EAAEL,aADqC;AAE5CQ,MAAAA,SAAS,EAAE;AACTJ,QAAAA,IAAI,EAAEA;AADG;AAFiC,KAAb,CAAjC;AAOA,WAAO;AAAEK,MAAAA,QAAQ,EAAEF,SAAS,CAAC,CAAD;AAArB,KAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI;AAACD,MAAAA;AAAD,QAAa,KAAKE,KAAtB;AACA,QAAI;AAACC,MAAAA,QAAQ,GAAC;AAAV,QAAgBH,QAApB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,EAAEA,QAAQ,CAACI,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBJ,QAAQ,CAACK,IAAjC,CAAJ,CADF,EAEIF,QAAQ,GACR;AAAK,MAAA,GAAG,EAAEA,QAAQ,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,GAEN,IAJN,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,gBAAeJ,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAN,CARF,CADF;AAYD;;AA7B8C","sourcesContent":["\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../../modules/apolloClient\";\n\nconst providerQuery = gql`\n  query($slug: String) {\n    providers(where: {slug: {contains: $slug}}){\n      id\n      createdAt\n      name\n      website\n      logotype {\n        url\n      }\n      affiliateLink\n      screenshots\n      termsUrl\n      founded\n      rating\n      weight\n      slug\n      numberOfTags\n    }\n  }\n`;\n\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let { slug } = ctx.query\n\n    let { data: {providers}} = await client.query({\n      query: providerQuery,\n      variables: {\n        slug: slug\n      }\n    })\n\n    return { provider: providers[0] };\n  }\n\n  render() {\n    let {provider} = this.props\n    let {logotype={}} = provider\n    return (\n      <div>\n        <div>\n          <h1><a href={provider.url}>{provider.name}</a></h1>\n          { logotype ?\n            <img src={logotype.url}></img>\n            : null\n          }\n        </div>\n        <pre>{JSON.stringify(provider, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}