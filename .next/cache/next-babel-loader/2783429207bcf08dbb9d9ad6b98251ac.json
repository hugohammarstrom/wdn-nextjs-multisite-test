{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/_app.js\";\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport { ApolloProvider } from \"react-apollo\";\nimport { client } from \"../modules/apolloClient\";\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    pageProps.siteUrl = ctx.req.headers[\"wdn-site-url\"];\n    let {\n      data\n    } = await client.query({\n      query: siteQuery,\n      variables: {\n        siteUrl: ctx.req.headers[\"wdn-site-url\"] || \"livecasinorank.se\"\n      }\n    });\n    return {\n      site: data.sites[0]\n    };\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    console.log(this.props);\n    if (!pageProps.siteUrl) return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"No site specified!\");\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/_app.js"],"names":["React","App","Container","ApolloProvider","client","MyApp","getInitialProps","Component","ctx","pageProps","siteUrl","req","headers","data","query","siteQuery","variables","site","sites","render","props","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,SAAQC,cAAR,QAA6B,cAA7B;AACA,SAAQC,MAAR,QAAqB,yBAArB;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA,eAAaK,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AAGA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AAEDC,IAAAA,SAAS,CAACC,OAAV,GAAoBF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgB,cAAhB,CAApB;AAEA,QAAI;AAAEC,MAAAA;AAAF,QAAW,MAAMT,MAAM,CAACU,KAAP,CAAa;AAChCA,MAAAA,KAAK,EAAEC,SADyB;AAEhCC,MAAAA,SAAS,EAAE;AACTN,QAAAA,OAAO,EAAEF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgB,cAAhB,KAAmC;AADnC;AAFqB,KAAb,CAArB;AAOA,WAAO;AAAEK,MAAAA,IAAI,EAAEJ,IAAI,CAACK,KAAL,CAAW,CAAX;AAAR,KAAP;AAEA,WAAO;AAAET,MAAAA;AAAF,KAAP;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKW,KAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,QAAI,CAACX,SAAS,CAACC,OAAf,EAAwB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AAExB,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAxCqB;;AA2CxB,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport {ApolloProvider} from \"react-apollo\"\nimport {client} from \"../modules/apolloClient\"\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n\n    \n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    \n    pageProps.siteUrl = ctx.req.headers[\"wdn-site-url\"]\n\n    let { data } = await client.query({\n      query: siteQuery,\n      variables: {\n        siteUrl: ctx.req.headers[\"wdn-site-url\"] || \"livecasinorank.se\"\n      }\n    });\n\n    return { site: data.sites[0] };\n  \n    return { pageProps }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    console.log(this.props)\n    if (!pageProps.siteUrl) return <h1>No site specified!</h1>\n\n    return (\n      <Container>\n        <ApolloProvider client={client}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}