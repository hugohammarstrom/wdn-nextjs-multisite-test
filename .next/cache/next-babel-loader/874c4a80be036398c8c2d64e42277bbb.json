{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/index.js\";\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../modules/apolloClient\";\nconst siteQuery = gql`\n  query($siteUrl: String) {\n    sites(where: { name: { equals: $siteUrl } }) {\n      id\n      language\n      languageLabel\n      name\n      niche\n      logotype {\n        url\n      }\n      providers(first: 10) {\n        name\n        rating\n      }\n    }\n  }\n`;\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let {\n      data\n    } = await client.query({\n      query: siteQuery\n    });\n    return {\n      site: data.sites[0]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, _JSON$stringify(this.props.site, null, 2)));\n  }\n\n}","map":{"version":3,"sources":["/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/index.js"],"names":["React","Component","Query","gql","client","siteQuery","IndexPage","getInitialProps","ctx","data","query","site","sites","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,MAAMC,SAAS,GAAGF,GAAI;;;;;;;;;;;;;;;;;CAAtB;AAmBA,eAAe,MAAMG,SAAN,SAAwBL,SAAxB,CAAkC;AAC/C,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,QAAI;AAAEC,MAAAA;AAAF,QAAW,MAAML,MAAM,CAACM,KAAP,CAAa;AAChCA,MAAAA,KAAK,EAAEL;AADyB,KAAb,CAArB;AAIA,WAAO;AAAEM,MAAAA,IAAI,EAAEF,IAAI,CAACG,KAAL,CAAW,CAAX;AAAR,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,gBAAe,KAAKC,KAAL,CAAWH,IAA1B,EAAgC,IAAhC,EAAsC,CAAtC,CAAN,CADF,CADF;AAKD;;AAf8C","sourcesContent":["import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../modules/apolloClient\";\n\nconst siteQuery = gql`\n  query($siteUrl: String) {\n    sites(where: { name: { equals: $siteUrl } }) {\n      id\n      language\n      languageLabel\n      name\n      niche\n      logotype {\n        url\n      }\n      providers(first: 10) {\n        name\n        rating\n      }\n    }\n  }\n`;\n\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let { data } = await client.query({\n      query: siteQuery\n    });\n\n    return { site: data.sites[0] };\n  }\n\n  render() {\n    return (\n      <div>\n        <pre>{JSON.stringify(this.props.site, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}