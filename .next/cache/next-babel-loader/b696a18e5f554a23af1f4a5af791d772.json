{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/currencies/[slug].js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($slug: String) {\\n    taxonomyItems(\\n      where: {\\n        slug: { contains: $slug }\\n        parent: { slug: { contains: \\\"currencies\\\" } }\\n      }\\n    ) {\\n      id\\n      createdAt\\n      name\\n      createdBy {\\n        id\\n        name\\n        email\\n      }\\n      parent {\\n        id\\n        createdAt\\n        name\\n        createdBy {\\n          id\\n          name\\n          email\\n        }\\n        noListing\\n        disableTierTwo\\n        tierTwoBase\\n        tierTwoFilter\\n        countryCode\\n        weight\\n        slug\\n      }\\n      noListing\\n      disableTierTwo\\n      tierTwoBase\\n      tierTwoFilter\\n      countryCode\\n      weight\\n      slug\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../../modules/apolloClient\";\nvar currencyQuery = gql(_templateObject());\n\nvar IndexPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexPage, _Component);\n\n  function IndexPage() {\n    _classCallCheck(this, IndexPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IndexPage).apply(this, arguments));\n  }\n\n  _createClass(IndexPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, _JSON$stringify(this.props.currency, null, 2)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        var slug, _ref, taxonomyItems;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                slug = ctx.query.slug;\n                _context.next = 3;\n                return client.query({\n                  query: currencyQuery,\n                  variables: {\n                    slug: slug\n                  }\n                });\n\n              case 3:\n                _ref = _context.sent;\n                taxonomyItems = _ref.data.taxonomyItems;\n                return _context.abrupt(\"return\", {\n                  currency: taxonomyItems[0]\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IndexPage;\n}(Component);\n\nexport { IndexPage as default };","map":{"version":3,"sources":["/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/currencies/[slug].js"],"names":["React","Component","gql","client","currencyQuery","IndexPage","props","currency","ctx","slug","query","variables","taxonomyItems","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,IAAMC,aAAa,GAAGF,GAAH,mBAAnB;;IA4CqBG,S;;;;;;;;;;;;;6BAgBV;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,gBAAe,KAAKC,KAAL,CAAWC,QAA1B,EAAoC,IAApC,EAA0C,CAA1C,CAAN,CADF,CADF;AAKD;;;;;;gDArB4BC,G;;;;;;;AACrBC,gBAAAA,I,GAASD,GAAG,CAACE,K,CAAbD,I;;uBAIIN,MAAM,CAACO,KAAP,CAAa;AACrBA,kBAAAA,KAAK,EAAEN,aADc;AAErBO,kBAAAA,SAAS,EAAE;AACTF,oBAAAA,IAAI,EAAEA;AADG;AAFU,iBAAb,C;;;;AADAG,gBAAAA,a,QAARC,I,CAAQD,a;iDAQH;AAAEL,kBAAAA,QAAQ,EAAEK,aAAa,CAAC,CAAD;AAAzB,iB;;;;;;;;;;;;;;;;;;;EAb4BX,S;;SAAlBI,S","sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../../modules/apolloClient\";\n\nconst currencyQuery = gql`\n  query($slug: String) {\n    taxonomyItems(\n      where: {\n        slug: { contains: $slug }\n        parent: { slug: { contains: \"currencies\" } }\n      }\n    ) {\n      id\n      createdAt\n      name\n      createdBy {\n        id\n        name\n        email\n      }\n      parent {\n        id\n        createdAt\n        name\n        createdBy {\n          id\n          name\n          email\n        }\n        noListing\n        disableTierTwo\n        tierTwoBase\n        tierTwoFilter\n        countryCode\n        weight\n        slug\n      }\n      noListing\n      disableTierTwo\n      tierTwoBase\n      tierTwoFilter\n      countryCode\n      weight\n      slug\n    }\n  }\n`;\n\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let { slug } = ctx.query;\n\n    let {\n      data: { taxonomyItems }\n    } = await client.query({\n      query: currencyQuery,\n      variables: {\n        slug: slug\n      }\n    });\n\n    return { currency: taxonomyItems[0] };\n  }\n\n  render() {\n    return (\n      <div>\n        <pre>{JSON.stringify(this.props.currency, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}