{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/currencies/[slug].js\";\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../../modules/apolloClient\";\nconst currencyQuery = gql`\n  query($slug: String) {\n    taxonomyItems(\n      where: {\n        slug: { contains: $slug }\n        parent: { slug: { contains: \"currencies\" } }\n      }\n    ) {\n      id\n      createdAt\n      name\n      createdBy {\n        id\n        name\n        email\n      }\n      parent {\n        id\n        createdAt\n        name\n        createdBy {\n          id\n          name\n          email\n        }\n        noListing\n        disableTierTwo\n        tierTwoBase\n        tierTwoFilter\n        countryCode\n        weight\n        slug\n      }\n      noListing\n      disableTierTwo\n      tierTwoBase\n      tierTwoFilter\n      countryCode\n      weight\n      slug\n    }\n  }\n`;\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let {\n      slug\n    } = ctx.query;\n    let {\n      data: {\n        taxonomyItems\n      }\n    } = await client.query({\n      query: currencyQuery,\n      variables: {\n        slug: slug\n      }\n    });\n    return {\n      currency: taxonomyItems[0]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, _JSON$stringify(this.props.currency, null, 2)));\n  }\n\n}","map":{"version":3,"sources":["/Users/hugohammarstrom/repos/stateless.digital/wdn/cdn/multisite-test/pages/currencies/[slug].js"],"names":["React","Component","gql","client","currencyQuery","IndexPage","getInitialProps","ctx","slug","query","data","taxonomyItems","variables","currency","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,MAAMC,aAAa,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA1B;AA4CA,eAAe,MAAMG,SAAN,SAAwBJ,SAAxB,CAAkC;AAC/C,eAAaK,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,QAAI;AAAEC,MAAAA;AAAF,QAAWD,GAAG,CAACE,KAAnB;AAEA,QAAI;AACFC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEA,MAAMR,MAAM,CAACM,KAAP,CAAa;AACrBA,MAAAA,KAAK,EAAEL,aADc;AAErBQ,MAAAA,SAAS,EAAE;AACTJ,QAAAA,IAAI,EAAEA;AADG;AAFU,KAAb,CAFV;AASA,WAAO;AAAEK,MAAAA,QAAQ,EAAEF,aAAa,CAAC,CAAD;AAAzB,KAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,gBAAe,KAAKC,KAAL,CAAWF,QAA1B,EAAoC,IAApC,EAA0C,CAA1C,CAAN,CADF,CADF;AAKD;;AAtB8C","sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../../modules/apolloClient\";\n\nconst currencyQuery = gql`\n  query($slug: String) {\n    taxonomyItems(\n      where: {\n        slug: { contains: $slug }\n        parent: { slug: { contains: \"currencies\" } }\n      }\n    ) {\n      id\n      createdAt\n      name\n      createdBy {\n        id\n        name\n        email\n      }\n      parent {\n        id\n        createdAt\n        name\n        createdBy {\n          id\n          name\n          email\n        }\n        noListing\n        disableTierTwo\n        tierTwoBase\n        tierTwoFilter\n        countryCode\n        weight\n        slug\n      }\n      noListing\n      disableTierTwo\n      tierTwoBase\n      tierTwoFilter\n      countryCode\n      weight\n      slug\n    }\n  }\n`;\n\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let { slug } = ctx.query;\n\n    let {\n      data: { taxonomyItems }\n    } = await client.query({\n      query: currencyQuery,\n      variables: {\n        slug: slug\n      }\n    });\n\n    return { currency: taxonomyItems[0] };\n  }\n\n  render() {\n    return (\n      <div>\n        <pre>{JSON.stringify(this.props.currency, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}