{"version":3,"file":"static/webpack/static/development/pages/index.js.b0dc7f681b8befc4dcd8.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../modules/apolloClient\";\nimport Link from 'next/link'\n\nconst siteQuery = gql`\n  query($siteUrl: String) {\n    sites(where: { name: { equals: $siteUrl } }) {\n      id\n      language\n      languageLabel\n      name\n      niche\n      logotype {\n        url\n      }\n      providers(first: 10) {\n        id\n        name\n        rating\n        slug\n      }\n    }\n  }\n`;\n\nexport default class IndexPage extends Component {\n  static async getInitialProps(ctx) {\n    let { data: {sites} } = await client.query({\n      query: siteQuery,\n      variables: {\n        siteUrl: ctx.req.headers[\"wdn-site-url\"]\n      }\n    });\n\n    return { site: sites[0] };\n  }\n\n  render() {\n    let {site} = this.props\n    let {providers} = site\n    return (\n      <div>\n        <div>\n          <h1>{site.name}</h1>\n          { site.logotype ?\n            <img src={site.logotype.url}></img>\n            : null\n          }\n          <a href={site.url}></a>\n        </div>\n        <h3>Providers</h3>\n        {providers.map(provider => {\n          return (\n            <Link href={`/providers/${provider.slug}`} prefetch>\n              {provider.name}\n            </Link>\n          )\n        })}\n        <pre>{JSON.stringify(site, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAoBA;;;;;;;;;;;;;AAYA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;AAnCA;;;;;;;;AACA;AACA;AACA;AACA;AADA;AAFA;AACA;;;AADA;AAOA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAVA;AACA;;;;;A","sourceRoot":""}